
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author pandey
 */
public class Items extends javax.swing.JFrame {
   
    // creating string objects
    String name,price,num;
   
    public Items() throws SQLException {
        
        initComponents();
        
        //setting the location of the JFrame in the screen
        
        Toolkit t = getToolkit();
        Dimension size = t.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2-getHeight()/2);
        
        //displaying the data in Items JFrame 
        show_user();
    }
        employee emp = new employee();
        Report report = new Report();
          
        
    public ArrayList<data> userList()throws SQLException
    {   
        // making a arratlist of data from the database
        ArrayList<data> usersList = new ArrayList<>();
        
        //connecting and retrieving data from database
        try{
            String url = "jdbc:mysql://127.0.0.1:3306/resturant";
            final String user = "root";
            final String pass= "Thapakaji2020.";
            Connection con = DriverManager.getConnection(url, user, pass);
            
            //selecting specific table from the database
            String query0 = "SELECT *  FROM items";
            
            //creating the statment and storing the resultset
            java.sql.Statement stt = con.createStatement();
            ResultSet rs = stt.executeQuery(query0);
            
            data d1;
            
            //getting every single value
            while(rs.next())
            {
                //retrieving data in specific manner
                d1 = new data(rs.getInt("Number"), rs.getString("Name"),
                rs.getFloat("Price"));
                
                usersList.add(d1);
            }
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return usersList;
    }
    
    //displaying the retrieved data into JFrame
    public void show_user () throws SQLException{
        ArrayList<data> lists = userList();
        DefaultTableModel model = (DefaultTableModel) Items_Table.getModel();
        Object[] row = new Object[3];
        
        //looping through every elements of the array
        for (int i = 0; i<lists.size(); i++){
            row[0] = lists.get(i).getnum();
            row[1] = lists.get(i).getname();
            row[2] = lists.get(i).getprice();
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Items_Table = new javax.swing.JTable();
        inum = new javax.swing.JTextField();
        namee = new javax.swing.JTextField();
        iprice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Yes = new javax.swing.JButton();
        No = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Employee = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        rreport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 204, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setText("Item name: ");

        jLabel1.setText("Item number: ");

        jLabel2.setText("Price: ");

        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Items_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Items_Table);

        inum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inumActionPerformed(evt);
            }
        });

        namee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameeActionPerformed(evt);
            }
        });

        iprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipriceActionPerformed(evt);
            }
        });

        jLabel4.setText("Want to Order??");

        Yes.setText("Yes");
        Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesActionPerformed(evt);
            }
        });

        No.setText("No");
        No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoActionPerformed(evt);
            }
        });

        jLabel5.setText("Employee Information");

        Employee.setText("Click Here!!");
        Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeActionPerformed(evt);
            }
        });

        jLabel6.setText("Report");

        rreport.setText("Click Here!!");
        rreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rreportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Employee)
                        .addGap(161, 161, 161))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Insert)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Update)
                                .addGap(39, 39, 39)
                                .addComponent(Delete))
                            .addComponent(namee, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iprice, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addComponent(Yes)
                                .addGap(30, 30, 30)
                                .addComponent(No)
                                .addGap(297, 297, 297)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(rreport))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inum, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Employee))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rreport)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inum, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iprice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Insert)
                                    .addComponent(Update)
                                    .addComponent(Delete)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(namee, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Yes)
                            .addComponent(No))))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        
        // 
         try{
            String url = "jdbc:mysql://127.0.0.1:3306/resturant";
            final String user = "root";
            final String pass= "Thapakaji2020.";
            Connection con = DriverManager.getConnection(url, user, pass);
            
            int row1 = Items_Table.getSelectedRow();
            
            String Value1 =(Items_Table.getModel().getValueAt(row1, 0).
                    toString());
            
            String query2 = "update items set Number=?, Name = ?, Price = ?"
                    + "where Number = "+Value1;
            
            PreparedStatement p2 = con.prepareStatement(query2);
            
            p2.setString(1, inum.getText());
            p2.setString(2, namee.getText());
            p2.setString(3, iprice.getText());
            p2.executeUpdate();
            DefaultTableModel model1 =(DefaultTableModel)Items_Table.getModel();
            model1.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "Data Updated!!");       
            
            
         }
         catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void nameeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameeActionPerformed

    private void ipriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipriceActionPerformed

    private void NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoActionPerformed
        
        //close the program if selected.
        System.exit(0);
    }//GEN-LAST:event_NoActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
       
        
        /** executing try and catch block for connecting database and 
         * retrieving and inserting data
         */
        try{
            String url = "jdbc:mysql://127.0.0.1:3306/resturant";
            final String user = "root";
            final String pass= "Thapakaji2020.";
            Connection con = DriverManager.getConnection(url, user, pass);
            
            //inserting user values into specific columns
            String query1 = "insert into items (Number, Name, Price)"
                    + "values(?,?,?)";
            PreparedStatement p = con.prepareStatement(query1);
            
            //getting the user input from the textfield
            p.setString(1, inum.getText());
            p.setString(2, namee.getText());
            p.setString(3, iprice.getText());
            p.executeUpdate();
            
            DefaultTableModel m1 = (DefaultTableModel)Items_Table.getModel();
            m1.setRowCount(0);
            
            //dispalying new data set
            show_user();
            
            //message box to confirm insertion of data
            JOptionPane.showMessageDialog(null, "Data inserted!!");
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        



    }//GEN-LAST:event_InsertActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        /** executing try and catch block for connecting database and 
         * retrieving and deleting data
         */
         try{
            String url = "jdbc:mysql://127.0.0.1:3306/resturant";
            final String user = "root";
            final String pass= "Thapakaji2020.";
            Connection con = DriverManager.getConnection(url, user, pass);
            
            //choosing the specific row selected by user
            int r = Items_Table.getSelectedRow();
            String val = (Items_Table.getModel().getValueAt(r, 0).toString());
            
            //delecting row of  item number(primary key) = val
            String query1 = "DELETE FROM items where Number="+val;
            PreparedStatement ps = con.prepareStatement(query1);
            ps.executeUpdate();
            
            //getting the new model after data deletion
            DefaultTableModel m1 = (DefaultTableModel)Items_Table.getModel();
            m1.setRowCount(0);
            
            //dispalying new data set
            show_user();
            JOptionPane.showMessageDialog(null, "Data deleted successfully!");
            }
         catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        
        this.setTitle("Hamro Menu");
        
    }//GEN-LAST:event_formWindowOpened

    private void YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesActionPerformed
        
         try{
            String url = "jdbc:mysql://127.0.0.1:3306/resturant";
            final String user = "root";
            final String pass= "Thapakaji2020.";
            Connection con = DriverManager.getConnection(url, user, pass);
            String text = JOptionPane.showInputDialog("Enter item number:");
            String quer = "select Price from items where Number= ?";
            PreparedStatement pst = con.prepareStatement(quer);
            pst.setString(1, text);
            
            ResultSet rstt = pst.executeQuery();
            rstt.next();
            String foundType = rstt.getString(1);
            String quan=JOptionPane.showInputDialog
                        ("Please enter the quantity:");
            double quann = Double.valueOf(quan);
            double total = quann * Double.valueOf(foundType);
            String ptotal = Double.toString(total);
            JOptionPane.showMessageDialog(null, "Your total is: $"+ptotal);
            //JOptionPane.showMessageDialog(null, rstt);
            
            
         }
          
         
            catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
       
        
    }//GEN-LAST:event_YesActionPerformed

    private void EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeActionPerformed

        emp.setVisible(true);
        emp.setDefaultCloseOperation(DISPOSE_ON_CLOSE);



    }//GEN-LAST:event_EmployeeActionPerformed

    private void rreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rreportActionPerformed
        
         report.setVisible(true);
        report.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_rreportActionPerformed

    private void inumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inumActionPerformed

   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                  new Items().setVisible(true);
                }
                catch (SQLException ex) {
                    Logger.getLogger(Items.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Employee;
    private javax.swing.JButton Insert;
    private javax.swing.JTable Items_Table;
    private javax.swing.JButton No;
    private javax.swing.JButton Update;
    private javax.swing.JButton Yes;
    private javax.swing.JTextField inum;
    private javax.swing.JTextField iprice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namee;
    private javax.swing.JButton rreport;
    // End of variables declaration//GEN-END:variables
}
